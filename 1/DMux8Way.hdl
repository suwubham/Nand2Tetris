// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000 a
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001 b 
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010 c
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011 d
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100 e
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101 f
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110 g
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111 h
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux4Way(in=in, sel=sel[0..1], a=ae, b=bf, c=cg, d=dh);

    DMux(in=ae, sel=sel[2], a=a, b=e);
    DMux(in=bf, sel=sel[2], a=b, b=f);
    DMux(in=cg, sel=sel[2], a=c, b=g);
    DMux(in=dh, sel=sel[2], a=d, b=h);

    //// Replace this comment with your code.
    //Alternative Solution
    // DMux(in=in, sel=sel[2], a=dmux0, b=dmux1);
    // DMux4Way(in=dmux0, sel=sel[0..1], a=a, b=b, c=c, d=d);
    // DMux4Way(in=dmux1, sel=sel[0..1], a=e, b=f, c=g, d=h);
}
